
--- PRODUCT LINE = FLEET
--- market_balance (neighborhood ratio) at time of creation would be resource intensive to add in

with fleet_table as (
    select o.favor_id,
           r.assign_id,
           o.product_line,
           o.requested_cdt,
           o.dow_cdt,
           o.hour_cdt,
           o.miles_pickup_to_dropoff,
           m.current_market_name as market,
           o.minutes_to_first_assign,
           o.minutes_to_accept,
           o.minutes_to_store,
           o.minutes_at_store,
           o.minutes_to_deliver,
           a.address_type,
           o.meal_time
--- insert order outcome here


from reporting.orders o
left join reporting.markets m
    on o.market_id = m.market_id
left join runner.assignments r
    on o.favor_id = r.favor_id
left join api.address a
    on o.address_id = a.id
where product_line = 'fleet'

--- csv file was too large, so this was narrowed down
    and trunc(o.requested_cdt) between '2021-8-1' and '2021-9-16'
    and o.is_runnable = '1'
)

select favor_id, product_line, trunc(requested_cdt), dow_cdt, hour_cdt, miles_pickup_to_dropoff,
       minutes_to_first_assign, minutes_to_accept, minutes_to_store, minutes_at_store, minutes_to_deliver, meal_time,
case when (market = 'Austin Metro' or market = 'San Antonio Metro' or market = 'DFW Metro' or market = 'Houston Metro') then 'tier_1'
            else 'tier_2' end as market_tier,
count(distinct assign_id) as runner_assignment_count,
case when address_type = 'apartment' then 'yes'
            else 'no' end as address_is_apartment

from fleet_table
group by favor_id, product_line, requested_cdt, dow_cdt, hour_cdt, miles_pickup_to_dropoff, market, address_type,
       minutes_to_first_assign, minutes_to_accept, minutes_to_store, minutes_at_store, minutes_to_deliver, meal_time;


select * from datalake_eta.eta_metrics limit 100;


